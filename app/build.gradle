apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'android-apt'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'io.fabric'

ext {
    playServicesVersion = "8.3.0"
    supportLibVersion = "23.1.1"
}
def Properties properties = new Properties()
def localProps = project.rootProject.file('local.properties')
def lintConfigFile = project.rootProject.file('lint.xml')
if (localProps.exists()) {
    properties.load(localProps.newDataInputStream())
}
def env = System.getenv()
def env_google_tracker = env["GA_TRACKER_ID"]
def tracker_id = properties.getProperty('GA_TRACKER_ID', env_google_tracker)

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    //Version Info
    def versionMajor = 0
    def versionMinor = 1
    def versionPatch = 0
    def versionBuild = 0 // bump for dogfood builds, public betas, etc.

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true
    }

    splits {
        abi {
            //'mips', 'x86', 'x86_64','armeabi', 'arm64-v8a'
            reset()
            enable true
            include 'armeabi-v7a'
            universalApk false
        }
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            res.srcDirs = ['src/main/res',
                           'src/main/res/images',
                           'src/main/res/layouts',
                           'src/main/res/layouts/activity',
                           'src/main/res/layouts/fragment',
                           'src/main/res/layouts/dialog',
                           'src/main/res/layouts/adapter',
                           'src/main/res/layouts/common',
                           'src/main/res/layouts/widget'
            ]
        }
    }

    signingConfigs {
        release {
            //Environment Variables
            def env_keystore_password = env["KEYSTORE_PASSWORD"]
            def env_key_alias = env["KEY_ALIAS"]
            def env_key_password = env["KEY_PASSWORD"]
            //Local build values
            def keystore_password = properties.getProperty('KEYSTORE_PASSWORD',
                    env_keystore_password)
            def key_alias = properties.getProperty('KEY_ALIAS', env_key_alias)
            def key_password = properties.getProperty('KEY_PASSWORD', env_key_password)
            //Signed release commands
            storeFile file("proxy.jks")
            storePassword keystore_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    productFlavors {
        dev {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev"
        }
        full {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-full"
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
            buildConfigField "boolean", "USE_GOOGLE_ANALYTICS", "false"
            buildConfigField "String", "GA_TRACKER_ID", tracker_id
            buildConfigField "boolean", "USE_LEAK_CANARY", "false"
        }
        release {
            debuggable false
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
            buildConfigField "boolean", "USE_GOOGLE_ANALYTICS", "true"
            buildConfigField "String", "GA_TRACKER_ID", tracker_id
            buildConfigField "boolean", "USE_LEAK_CANARY", "false"
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
        lintConfig = lintConfigFile
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    def isTravis = "true".equals(System.getenv("TRAVIS"))
    def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

    dexOptions {
        javaMaxHeapSize "8g"
        //Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }
}

afterEvaluate {
    def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
    def crash_key = properties.getProperty('CRASHLYTICS_API_KEY', env["CRASHLYTICS_API_KEY"])
    def crash_secret = properties.getProperty('CRASHLYTICS_API_SECRET', env["CRASHLYTICS_API_SECRET"])
    ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
        entry(key: "apiSecret", value: crash_secret)
        entry(key: "apiKey", value: crash_key)
    }
}

dependencies {
    //Local
    compile fileTree(dir: 'libs', include: '*.jar')
    //JetBrains
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.0-beta-3595'
    compile 'org.jetbrains.anko:anko-sdk23:0.8'
    compile 'org.jetbrains.anko:anko-support-v4:0.8'
    compile 'org.jetbrains.anko:anko-appcompat-v7:0.8'
    //Google
    compile "com.google.android.gms:play-services-base:${playServicesVersion}"
    compile "com.google.android.gms:play-services-measurement:${playServicesVersion}"
    compile "com.google.android.gms:play-services-analytics:${playServicesVersion}"
    //Android
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:palette-v7:${supportLibVersion}"
    //Jake
    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    compile 'com.jakewharton.timber:timber:4.0.1'
    //Square
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile 'com.squareup.okhttp:okhttp:2.6.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    //Facebook
    compile 'com.facebook.fresco:fresco:0.8.1'
    compile 'com.facebook.fresco:imagepipeline-okhttp:0.8.1'
    //RxJava
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxkotlin:0.30.1'
    //Realm DB
    compile 'io.realm:realm-android:0.86.0'
    //Bug Tracking
    compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
        transitive = true;
    }
}
